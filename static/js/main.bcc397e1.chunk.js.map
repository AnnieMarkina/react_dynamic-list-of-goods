{"version":3,"sources":["Components/Good/Good.tsx","Components/GoodsList/GoodsList.tsx","Helpers/api.ts","App.tsx","index.tsx"],"names":["Good","name","color","style","GoodsList","goods","map","good","key","id","getGoods","a","fetch","response","json","App","state","loadingError","goodsFromServer","this","setState","message","sort","b","localeCompare","slice","filter","className","type","onClick","handleLoadAll","handleLoadFive","handleLoadRed","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+SAOaA,G,MAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACvC,wBACEC,MAAO,CAAED,MAAM,GAAD,OAAKA,KAElBD,KCEQG,EAAsC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjD,4BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CAAMC,IAAKD,EAAKE,GAAIR,KAAMM,EAAKN,KAAMC,MAAOK,EAAKL,aCR1CQ,EAAQ,uCAAG,4BAAAC,EAAA,sEACCC,MAHT,yEAEQ,cAChBC,EADgB,yBAGfA,EAASC,QAHM,2CAAH,qDC6ENC,E,4MAvEbC,MAAQ,CACNX,MAAO,GACPY,aAAc,I,uMAKkBP,I,OAAxBQ,E,OAENC,KAAKC,SAAS,CAAEf,MAAOa,I,gDAEvBC,KAAKC,SAAS,CAAEH,aAAc,KAAMI,U,sRAKRX,I,OAAxBQ,E,OAENC,KAAKC,SAAS,CACZf,MAAO,YAAIa,GACRI,MAAK,SAACX,EAAGY,GAAJ,OAAUZ,EAAEV,KAAKuB,cAAcD,EAAEtB,SACtCwB,MAAM,EAAG,K,4QAKgBf,I,OAAxBQ,E,OAENC,KAAKC,SAAS,CACZf,MAAO,YAAIa,GACRQ,QAAO,SAAAnB,GAAI,MAAmB,QAAfA,EAAKL,W,qIAIjB,IAAD,SACyBiB,KAAKH,MAA7BX,EADD,EACCA,MAAOY,EADR,EACQA,aAEf,OACE,oCACE,yBAAKU,UAAU,iBACb,4BACEC,KAAK,SACLC,QAAS,kBAAM,EAAKC,kBAFtB,YAOA,4BACEF,KAAK,SACLC,QAAS,kBAAM,EAAKE,mBAFtB,UAOA,4BACEH,KAAK,SACLC,QAAS,kBAAM,EAAKG,kBAFtB,aAODf,EACC,2BAAIA,GAEF,kBAAC,EAAD,CAAWZ,MAAOA,S,GAjEZ4B,IAAMC,WCTxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.bcc397e1.chunk.js","sourcesContent":["import React from 'react';\n\ntype GoodProps = {\n  name: string;\n  color: string;\n};\n\nexport const Good: React.FC<GoodProps> = ({ name, color }) => (\n  <li\n    style={{ color: `${color}` }}\n  >\n    {name}\n  </li>\n);\n","import React from 'react';\nimport { Good } from '../Good/Good';\n\ninterface Good {\n  id: number;\n  name: string;\n  color: string;\n}\n\ntype GoodsListProps = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<GoodsListProps> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <Good key={good.id} name={good.name} color={good.color} />\n    ))}\n  </ul>\n);\n","export interface Good {\n  id: number;\n  name: string;\n  color: string;\n};\n\nconst API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport const getGoods = async (): Promise<Good[]> => {\n  const response = await fetch(API_URL);\n\n  return response.json();\n  // always return PROMISE\n};\n","import React from 'react';\nimport './App.css';\n\nimport { GoodsList } from './Components/GoodsList/GoodsList';\nimport { getGoods, Good } from './Helpers/api';\n\ntype AppState = {\n  goods: Good[];\n  loadingError: string;\n};\n\ntype AppProps = {};\n\nclass App extends React.Component<AppProps, AppState> {\n  state = {\n    goods: [],\n    loadingError: '',\n  };\n\n  async handleLoadAll() {\n    try {\n      const goodsFromServer = await getGoods();\n\n      this.setState({ goods: goodsFromServer });\n    } catch (error) {\n      this.setState({ loadingError: error.message }); \n    }\n  };\n\n  async handleLoadFive() {\n    const goodsFromServer = await getGoods();\n\n    this.setState({\n      goods: [...goodsFromServer]\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .slice(0, 5),\n    });\n  };\n\n  async handleLoadRed() {\n    const goodsFromServer = await getGoods();\n\n    this.setState({\n      goods: [...goodsFromServer]\n        .filter(good => good.color === 'red'),\n    });\n  };\n\n  render() {\n    const { goods, loadingError } = this.state;\n\n    return (\n      <>\n        <div className=\"buttons__list\">\n          <button\n            type=\"button\"\n            onClick={() => this.handleLoadAll()}\n          >\n            Load All\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.handleLoadFive()}\n          >\n            Load 5\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.handleLoadRed()}\n          >\n            Load red\n          </button>\n        </div>\n        {loadingError ? (\n          <p>{loadingError}</p>\n        ) : (\n            <GoodsList goods={goods} />\n          )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}